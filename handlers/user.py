import telebot
from telebot.handler_backends import StatesGroup, State

from funcs.datatime import gel_welcome
from funcs.db import get_institute_from_db
from funcs.functionality import functionality
from funcs.functionality2 import functionality2
from init_bot import bot


# class UserState(StatesGroup):
#     state1 = State()


@bot.message_handler(commands=["start", "help"])
def start(message: telebot.types.Message):
    text = f"{gel_welcome()} \n" \
           f"–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞üèõ\n\n" \
           f"–í–æ—Ç —á—Ç–æ —è –∏–º–µ—é:\n" \
           f"{functionality()}"
    bot.send_message(message.chat.id, text)
    # bot.set_state(message.from_user.id, UserState.state1)


# state=UserState.state1
@bot.message_handler(commands=["get_info"])
def get_info(message: telebot.types.Message):
    text = f"–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?üë©üèª‚Äçüéì\n" \
           f"{functionality2()}"
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=["get_university"])
def get_university(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/content/universitet/rukovodstvo"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã—Å—à–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–µ:  ", reply_markup=markup)


@bot.message_handler(commands=["get_directorate"])
def get_directorate(message: telebot.types.Message):
    markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=2)
    markup.add(
        telebot.types.KeyboardButton("–ò–†–ò–¢"),
        telebot.types.KeyboardButton("–ò–¢–°"),
        telebot.types.KeyboardButton("–ò–§–•–¢–∏–ú"),
        telebot.types.KeyboardButton("–ò–ù–≠–õ"),
        telebot.types.KeyboardButton("–ò–Ø–≠–∏–¢–§"),
        telebot.types.KeyboardButton("–ò–ü–¢–ú"),
        telebot.types.KeyboardButton("–ò–ù–≠–£")

    )
    bot.reply_to(message, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –∫–∞–∫–æ–≥–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞ –í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å?", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ò–†–ò–¢")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/irit_official"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/irit"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbp4-yv"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–¢–°")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/its_ngtu"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/its"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbpIR69"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–§–•–¢–∏–ú")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/ifhtim"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/ifhtim"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbpIO1i"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–ù–≠–õ")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/inel_ngtu"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/inel"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbpI005"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–Ø–≠–∏–¢–§")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/nnstu_ftf"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/iyaeitf"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbpIDzs"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–ü–¢–ú")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/ngtuiptm"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/iptm"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbpIH9D"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–ù–≠–£")
def handle_action(message: telebot.types.Message):
    institutes = get_institute_from_db(message.text)
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/ineungtu"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/ineu"},
        "–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ": {"url": "https://yandex.ru/maps/-/CDbpILl8"}
    })
    if not institutes:
        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ")
    else:
        for idx, institute in enumerate(institutes):
            bot.send_message(message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ: \n"
                                              f"–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[1]}\n"
                                              f"–î–∏—Ä–µ–∫—Ç–æ—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞: {institute[2]}\n"
                                              f"–ù–æ–º–µ—Ä –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[3]}\n"
                                              f"–ü–æ—á—Ç–∞ –¥–∏—Ä–µ–∫—Ü–∏–∏: {institute[4]}\n"
                                              f"–ê–¥—Ä–µ—Å: {institute[5]}\n\n"
                                              f"–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢: ",
                             parse_mode="HTML", reply_markup=markup)

            bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
            bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(commands=["get_lk"])
def get_lk(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç": {
            "url": "https://auth.nntu.ru/idp/oauth2_login.jsp#/provider/LDAP/12ef96388641343f28b7d5bd10cf430e"}
    })
    text = "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—á–µ–±–Ω–æ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏.\n\n"
    bot.send_message(message.chat.id, f"{text}–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—á–∞—â–µ–≥–æ—Å—è –ù–ì–¢–£ –∏–º. –†.–ï.–ê–ª–µ–∫—Å–µ–µ–≤–∞:", reply_markup=markup)
    # bot.reply_to(message, "–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—á–∞—â–µ–≥–æ—Å—è/—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ù–ì–¢–£ –∏–º. –†.–ï.–ê–ª–µ–∫—Å–µ–µ–≤–∞:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(commands=["get_url"])
def get_url(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞": {"url": "https://www.nntu.ru/"}
    })
    bot.reply_to(message, "–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –ù–ì–¢–£ –∏–º. –†.–ï.–ê–ª–µ–∫—Å–µ–µ–≤–∞:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)

# state=UserState.state1
@bot.message_handler(commands=["end"])
def end(message: telebot.types.Message):
    markup = telebot.types.ReplyKeyboardRemove()
    text = f"–°–ø–∞—Å–∏–±–æ! –ü–æ–∫–∞)"
    bot.send_message(message.chat.id, text, reply_markup=markup)
    # bot.delete_state(message.from_user.id)
